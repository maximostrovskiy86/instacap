// @ts-nocheck
import { Fragment } from 'react';
import { useRecoilState } from 'recoil';
import { Dialog, Transition } from '@headlessui/react';
import { syncWithExtensionState } from '@/state/uiState';
import { useAuth } from '@/hooks/useAuth';

const SyncWithExtension = () => {
  const { linkToGoogle } = useAuth();
  const [isOpen] = useRecoilState(syncWithExtensionState);

  const closeModal = () => {
    // setIsOpen(false);
  };

  const handleClick = () => {
    linkToGoogle(closeModal);
  };

  return (
    <Transition appear show={isOpen} as={Fragment}>
      <Dialog
        as="div"
        className="fixed inset-0 z-10 overflow-y-auto"
        onClose={closeModal}
      >
        <div className="flex items-center justify-center min-h-screen px-4 text-center">
          {/* <Transition.Child
            as={Fragment}
            enter="ease-out duration-300"
            enterFrom="opacity-0"
            enterTo="opacity-100"
            leave="ease-in duration-200"
            leaveFrom="opacity-100"
            leaveTo="opacity-0"
          ></Transition.Child> */}
          <Dialog.Overlay className="fixed inset-0 bg-green opacity-95" />

          {/* This element is to trick the browser into centering the modal contents. */}
          <span className="inline-block h-screen " aria-hidden="true">
            &#8203;
          </span>
          <Transition.Child
            as={Fragment}
            enter="ease-out duration-300"
            enterFrom="opacity-0 scale-95"
            enterTo="opacity-100 scale-100"
            leave="ease-in duration-200"
            leaveFrom="opacity-100 scale-100"
            leaveTo="opacity-0 scale-95"
          >
            <div className="inline-block w-full max-w-md p-6 mb-36 overflow-hidden text-left align-middle transition-all transform rounded-2xl">
              <Dialog.Title
                as="h3"
                className="text-2xl text-gray-900 leading-8"
              >
                Sync with Instacap for Chrome
              </Dialog.Title>
              <div className="mt-2">
                <p className="text-md text-black text-opacity-70 leading-5">
                  Sign in again complete syncing with your Instacap extension
                </p>
              </div>

              <div className="mt-4">
                <button
                  type="button"
                  className="btn-black"
                  onClick={handleClick}
                >
                  <img
                    className="w-4 pb-0.5"
                    src="/image/google-g-icn.png"
                    alt="google-go-icon"
                  />
                  SIGN IN
                </button>
              </div>
            </div>
          </Transition.Child>
        </div>
      </Dialog>
    </Transition>
  );
};

export default SyncWithExtension;
